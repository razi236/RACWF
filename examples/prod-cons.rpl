module ProdCons;

interface Producer {
	Int produce (Int a);
}

interface Consumer {
	Int consume (Int a);
}

class Producer implements Producer {
	Int produce (Int a) {
		cost(a);
		return 0;
	}
}

class Consumer implements Consumer {
	Int consume (Int a) {
		cost(a);
		return 0;
	}
}

{
    Fut<Int> f1; Fut<Int> f2; Fut<Int> f3; Fut<Int> f4;
    Producer p = new Producer ();
    Consumer c = new Consumer ();
    Int k1 = random(10);
    Int k2 = random(10);
    cost(k1);
    f1 = !produce(p,10) after dl 15;
    f2 = !produce(p,10) after f1 dl 15;
    cost(k2);
    f3 = !consume(c,5) after f2 dl 10;
    f4 = !consume(c,5) after f2 dl 10;
    await f3?;
    await f4?;
}
